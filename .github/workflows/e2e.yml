name: Playwright E2E

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: "0 2 * * *"   # nightly at 02:00 UTC

env:
  PYTHON_VERSION: '3.11'
  BASE_URL: ${{ secrets.BASE_URL || 'http://localhost:8080' 

jobs:
  smoke:
    name: Smoke tests (stub)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup Node (for npx if needed)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright Python package (ensures CLI is available)
        run: |
          python -m pip install playwright

      - name: Install Playwright browsers
        run: |
          # Python wrapper is reliable in Python CI contexts
          python -m playwright install --with-deps

      - name: Run smoke tests (stub mode)
        env:
          TEST_MODE: stub
          BASE_URL: ${{ secrets.BASE_URL || 'http://localhost:8080' }}
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
        run: |
          pytest -q --maxfail=1 --disable-warnings

      - name: Upload artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts
          path: artifacts/

  nightly-regression:
    name: Nightly regression (integration)
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup Node (for npx)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright Python package
        run: |
          python -m pip install playwright

      - name: Install Playwright browsers
        run: |
          python -m playwright install --with-deps

      - name: Run full regression (integration mode)
        env:
          TEST_MODE: integration
          BASE_URL: ${{ secrets.INTEGRATION_BASE_URL }}
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
        run: |
          pytest -q --maxfail=1 --disable-warnings || true

      - name: Upload artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-nightly-artifacts
          path: artifacts/
